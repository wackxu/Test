// ConvertSnapshotStatus converts snapshot status to storage.VolumeSnapshotDataCondition
func ConvertSnapshotStatus(status *csi.SnapshotStatus) storage.VolumeSnapshotDataCondition {
	var snapDataCondition storage.VolumeSnapshotDataCondition

	switch status.Type {
	case csi.SnapshotStatus_READY:
		snapDataCondition = storage.VolumeSnapshotDataCondition{
			Type:               storage.VolumeSnapshotDataConditionReady,
			Status:             v1.ConditionTrue,
			Message:            status.Details,
			LastTransitionTime: metav1.Now(),
		}
	case csi.SnapshotStatus_ERROR_UPLOADING:
		snapDataCondition = storage.VolumeSnapshotDataCondition{
			Type:               storage.VolumeSnapshotDataConditionError,
			Status:             v1.ConditionTrue,
			Message:            status.Details,
			LastTransitionTime: metav1.Now(),
		}
	case csi.SnapshotStatus_UPLOADING:
		snapDataCondition = storage.VolumeSnapshotDataCondition{
			Type:               storage.VolumeSnapshotDataConditionPending,
			Status:             v1.ConditionTrue,
			Message:            status.Details,
			LastTransitionTime: metav1.Now(),
		}
	case csi.SnapshotStatus_UNKNOWN:
		snapDataCondition = storage.VolumeSnapshotDataCondition{
			Type:               storage.VolumeSnapshotDataConditionPending,
			Status:             v1.ConditionUnknown,
			Message:            status.Details,
			LastTransitionTime: metav1.Now(),
		}
	}

	return snapDataCondition
}
